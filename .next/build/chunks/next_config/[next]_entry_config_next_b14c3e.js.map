{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/entry/config/next.js"],"sourcesContent":["import loadConfig from 'next/dist/server/config'\nimport loadCustomRoutes from 'next/dist/lib/load-custom-routes'\nimport { PHASE_DEVELOPMENT_SERVER } from 'next/dist/shared/lib/constants'\nimport assert from 'node:assert'\n\nconst loadNextConfig = async (silent) => {\n  const nextConfig = await loadConfig(\n    PHASE_DEVELOPMENT_SERVER,\n    process.cwd(),\n    undefined,\n    undefined,\n    silent\n  )\n\n  nextConfig.generateBuildId = await nextConfig.generateBuildId?.()\n\n  const customRoutes = await loadCustomRoutes(nextConfig)\n\n  nextConfig.headers = customRoutes.headers\n  nextConfig.rewrites = customRoutes.rewrites\n  nextConfig.redirects = customRoutes.redirects\n\n  // TODO: these functions takes arguments, have to be supported in a different way\n  nextConfig.exportPathMap = nextConfig.exportPathMap && {}\n  nextConfig.webpack = nextConfig.webpack && {}\n\n  if (nextConfig.experimental?.turbopack?.loaders) {\n    ensureLoadersHaveSerializableOptions(\n      nextConfig.experimental.turbopack.loaders\n    )\n  }\n\n  return nextConfig\n}\n\nexport { loadNextConfig as default }\n\nfunction ensureLoadersHaveSerializableOptions(turbopackLoaders) {\n  for (const [ext, loaderItems] of Object.entries(turbopackLoaders)) {\n    for (const loaderItem of loaderItems) {\n      if (\n        typeof loaderItem !== 'string' &&\n        !deepEqual(loaderItem, JSON.parse(JSON.stringify(loaderItem)))\n      ) {\n        throw new Error(\n          `loader ${loaderItem.loader} for match \"${ext}\" does not have serializable options. Ensure that options passed are plain JavaScript objects and values.`\n        )\n      }\n    }\n  }\n}\n\nfunction deepEqual(a, b) {\n  try {\n    assert.deepStrictEqual(a, b)\n    return true\n  } catch {\n    return false\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAKA,MAAM,iBAAiB,OAAO;IAC5B,MAAM,aAAa,MAAM,sKAEvB,QAAQ,OACR,WACA,WACA;IAGF,WAAW,kBAAkB,MAAM,WAAW;IAE9C,MAAM,eAAe,MAAM,oFAAiB;IAE5C,WAAW,UAAU,aAAa;IAClC,WAAW,WAAW,aAAa;IACnC,WAAW,YAAY,aAAa;IAGpC,WAAW,gBAAgB,WAAW,iBAAiB,CAAC;IACxD,WAAW,UAAU,WAAW,WAAW,CAAC;IAE5C,IAAI,WAAW,cAAc,WAAW,SAAS;QAC/C,qCACE,WAAW,aAAa,UAAU;IAEtC;IAEA,OAAO;AACT;;AAIA,SAAS,qCAAqC,gBAAgB;IAC5D,KAAK,MAAM,CAAC,KAAK,YAAY,IAAI,OAAO,QAAQ,kBAAmB;QACjE,KAAK,MAAM,cAAc,YAAa;YACpC,IACE,OAAO,eAAe,YACtB,CAAC,UAAU,YAAY,KAAK,MAAM,KAAK,UAAU,eACjD;gBACA,MAAM,IAAI,MACR,CAAC,OAAO,EAAE,WAAW,OAAO,YAAY,EAAE,IAAI,yGAAyG,CAAC;YAE5J;QACF;IACF;AACF;AAEA,SAAS,UAAU,CAAC,EAAE,CAAC;IACrB,IAAI;QACF,mDAAO,gBAAgB,GAAG;QAC1B,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}